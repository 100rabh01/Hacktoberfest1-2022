{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\Github Folder\\\\cryptocurrency-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Github Folder\\\\cryptocurrency-tracker\\\\src\\\\CryptoContext.js\";\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { createContext } from \"react\";\nvar Crypto = createContext();\n\nvar CryptoContext = function CryptoContext(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"INR\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currency = _useState2[0],\n      setCurrency = _useState2[1];\n\n  var _useState3 = useState(\"₹\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      symbol = _useState4[0],\n      setSymbol = _useState4[1];\n\n  useEffect(function () {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/React.createElement(Crypto.Provider, {\n    value: {\n      currency: currency,\n      symbol: symbol,\n      setCurrency: setCurrency\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default CryptoContext;\nexport var CryptoState = function CryptoState() {\n  return useContext(Crypto);\n};","map":{"version":3,"names":["React","useState","useEffect","useContext","createContext","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"sources":["C:/Users/user/Desktop/Github Folder/cryptocurrency-tracker/src/CryptoContext.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n\r\n  useEffect(() => {\r\n    if (currency === \"INR\") setSymbol(\"₹\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n  return (\r\n    <Crypto.Provider value={{ currency, symbol, setCurrency }}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,IAAMC,MAAM,GAAGD,aAAa,EAA5B;;AAEA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBACNN,QAAQ,CAAC,KAAD,CADF;EAAA;EAAA,IAC/BO,QAD+B;EAAA,IACrBC,WADqB;;EAAA,iBAEVR,QAAQ,CAAC,GAAD,CAFE;EAAA;EAAA,IAE/BS,MAF+B;EAAA,IAEvBC,SAFuB;;EAItCT,SAAS,CAAC,YAAM;IACd,IAAIM,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT,CAAxB,KACK,IAAIH,QAAQ,KAAK,KAAjB,EAAwBG,SAAS,CAAC,GAAD,CAAT;EAC9B,CAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;EAIA,oBACE,oBAAC,MAAD,CAAQ,QAAR;IAAiB,KAAK,EAAE;MAAEA,QAAQ,EAARA,QAAF;MAAYE,MAAM,EAANA,MAAZ;MAAoBD,WAAW,EAAXA;IAApB,CAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,QADH,CADF;AAKD,CAbD;;AAeA,eAAeD,aAAf;AAEA,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;EAC/B,OAAOT,UAAU,CAACE,MAAD,CAAjB;AACD,CAFM"},"metadata":{},"sourceType":"module"}